% Refutation found. Thanks to Tanya!
% SZS status Theorem for SM08-tag-auth
% SZS output start Proof for SM08-tag-auth
79. ! [X0] : constr_ZERO = constr_xor(X0,X0) [input]
80. ! [X1] : constr_xor(X1,constr_ZERO) = X1 [input]
81. ! [X2,X3] : constr_xor(X2,X3) = constr_xor(X3,X2) [input]
82. ! [X4,X5,X6] : constr_xor(X4,constr_xor(X5,X6)) = constr_xor(constr_xor(X4,X5),X6) [input]
83. ! [X7,X8] : ((pred_attacker(X8) & pred_attacker(X7)) => pred_attacker(constr_xor(X7,X8))) [input]
88. ! [X13,X14] : (pred_attacker(tuple_knowledge_from_1st_round_out_2(X13,X14)) => pred_attacker(X13)) [input]
89. ! [X15,X16] : (pred_attacker(tuple_knowledge_from_1st_round_out_2(X15,X16)) => pred_attacker(X16)) [input]
91. ! [X18] : (pred_attacker(tuple_knowledge_from_1st_round_out_1(X18)) => pred_attacker(X18)) [input]
100. ! [X26] : (pred_attacker(tuple_R_out_4(X26)) => pred_attacker(X26)) [input]
104. ! [X30] : (pred_attacker(tuple_R_out_1(X30)) => pred_attacker(X30)) [input]
105. ! [X31,X32] : ((pred_attacker(X32) & pred_attacker(X31)) => pred_attacker(tuple_R_in_2(X31,X32))) [input]
118. pred_attacker(tuple_knowledge_from_1st_round_out_1(name_r1_from_1st)) [input]
119. pred_attacker(tuple_knowledge_from_1st_round_out_2(constr_xor(name_t,name_r2_from_1st),constr_f(constr_xor(name_r1_from_1st,name_r2_from_1st),name_t))) [input]
121. pred_attacker(tuple_R_out_1(name_r1)) [input]
123. ! [X44] : (pred_attacker(tuple_R_in_2(X44,constr_f(constr_xor(name_r1,constr_xor(X44,name_t)),name_t))) => pred_attacker(tuple_R_out_4(name_objective))) [input]
124. pred_attacker(name_objective) [input]
125. ~pred_attacker(name_objective) [negated conjecture 124]
126. ! [X0] : constr_xor(X0,constr_ZERO) = X0 [rectify 80]
127. ! [X0,X1] : constr_xor(X0,X1) = constr_xor(X1,X0) [rectify 81]
128. ! [X0,X1,X2] : constr_xor(X0,constr_xor(X1,X2)) = constr_xor(constr_xor(X0,X1),X2) [rectify 82]
129. ! [X0,X1] : ((pred_attacker(X1) & pred_attacker(X0)) => pred_attacker(constr_xor(X0,X1))) [rectify 83]
133. ! [X0,X1] : (pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1)) => pred_attacker(X0)) [rectify 88]
134. ! [X0,X1] : (pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1)) => pred_attacker(X1)) [rectify 89]
136. ! [X0] : (pred_attacker(tuple_knowledge_from_1st_round_out_1(X0)) => pred_attacker(X0)) [rectify 91]
143. ! [X0] : (pred_attacker(tuple_R_out_4(X0)) => pred_attacker(X0)) [rectify 100]
147. ! [X0] : (pred_attacker(tuple_R_out_1(X0)) => pred_attacker(X0)) [rectify 104]
148. ! [X0,X1] : ((pred_attacker(X1) & pred_attacker(X0)) => pred_attacker(tuple_R_in_2(X0,X1))) [rectify 105]
156. ! [X0] : (pred_attacker(tuple_R_in_2(X0,constr_f(constr_xor(name_r1,constr_xor(X0,name_t)),name_t))) => pred_attacker(tuple_R_out_4(name_objective))) [rectify 123]
157. ~pred_attacker(name_objective) [flattening 125]
159. ! [X0,X1] : (pred_attacker(constr_xor(X0,X1)) | (~pred_attacker(X1) | ~pred_attacker(X0))) [ennf transformation 129]
160. ! [X0,X1] : (pred_attacker(constr_xor(X0,X1)) | ~pred_attacker(X1) | ~pred_attacker(X0)) [flattening 159]
165. ! [X0,X1] : (pred_attacker(X0) | ~pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1))) [ennf transformation 133]
166. ! [X0,X1] : (pred_attacker(X1) | ~pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1))) [ennf transformation 134]
168. ! [X0] : (pred_attacker(X0) | ~pred_attacker(tuple_knowledge_from_1st_round_out_1(X0))) [ennf transformation 136]
176. ! [X0] : (pred_attacker(X0) | ~pred_attacker(tuple_R_out_4(X0))) [ennf transformation 143]
180. ! [X0] : (pred_attacker(X0) | ~pred_attacker(tuple_R_out_1(X0))) [ennf transformation 147]
181. ! [X0,X1] : (pred_attacker(tuple_R_in_2(X0,X1)) | (~pred_attacker(X1) | ~pred_attacker(X0))) [ennf transformation 148]
182. ! [X0,X1] : (pred_attacker(tuple_R_in_2(X0,X1)) | ~pred_attacker(X1) | ~pred_attacker(X0)) [flattening 181]
190. ! [X0] : (pred_attacker(tuple_R_out_4(name_objective)) | ~pred_attacker(tuple_R_in_2(X0,constr_f(constr_xor(name_r1,constr_xor(X0,name_t)),name_t)))) [ennf transformation 156]
269. constr_ZERO = constr_xor(X0,X0) (0:5:1) [cnf transformation 79]
270. constr_xor(X0,constr_ZERO) = X0 (0:5:1) [cnf transformation 126]
271. constr_xor(X0,X1) = constr_xor(X1,X0) (0:7:1) [cnf transformation 127]
272. constr_xor(X0,constr_xor(X1,X2)) = constr_xor(constr_xor(X0,X1),X2) (0:11:1) [cnf transformation 128]
273. pred_attacker(constr_xor(X0,X1)) | ~pred_attacker(X1) | ~pred_attacker(X0) (0:8:1) [cnf transformation 160]
278. ~pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1)) | pred_attacker(X0) (0:6:1) [cnf transformation 165]
279. ~pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1)) | pred_attacker(X1) (0:6:1) [cnf transformation 166]
281. ~pred_attacker(tuple_knowledge_from_1st_round_out_1(X0)) | pred_attacker(X0) (0:5:1) [cnf transformation 168]
290. ~pred_attacker(tuple_R_out_4(X0)) | pred_attacker(X0) (0:5:1) [cnf transformation 176]
294. ~pred_attacker(tuple_R_out_1(X0)) | pred_attacker(X0) (0:5:1) [cnf transformation 180]
295. pred_attacker(tuple_R_in_2(X0,X1)) | ~pred_attacker(X1) | ~pred_attacker(X0) (0:8:1) [cnf transformation 182]
307. pred_attacker(tuple_knowledge_from_1st_round_out_1(name_r1_from_1st)) (0:3:1) [cnf transformation 118]
308. pred_attacker(tuple_knowledge_from_1st_round_out_2(constr_xor(name_t,name_r2_from_1st),constr_f(constr_xor(name_r1_from_1st,name_r2_from_1st),name_t))) (0:10) [cnf transformation 119]
310. pred_attacker(tuple_R_out_1(name_r1)) (0:3:1) [cnf transformation 121]
312. pred_attacker(tuple_R_out_4(name_objective)) | ~pred_attacker(tuple_R_in_2(X0,constr_f(constr_xor(name_r1,constr_xor(X0,name_t)),name_t))) (0:13) [cnf transformation 190]
313. ~pred_attacker(name_objective) (0:2:1) [cnf transformation 157]
314. pred_attacker(tuple_knowledge_from_1st_round_out_2(constr_xor(name_r2_from_1st,name_t),constr_f(constr_xor(name_r1_from_1st,name_r2_from_1st),name_t))) (0:10:1) [forward demodulation 308,271]
316. 0 <=> ! [X0] : ~pred_attacker(tuple_R_in_2(X0,constr_f(constr_xor(name_r1,constr_xor(X0,name_t)),name_t))) [avatar definition]
317. ~pred_attacker(tuple_R_in_2(X0,constr_f(constr_xor(name_r1,constr_xor(X0,name_t)),name_t))) <- {0} (0:10:1) [avatar component clause 316]
322. 2 <=> pred_attacker(tuple_R_out_4(name_objective)) [avatar definition]
323. pred_attacker(tuple_R_out_4(name_objective)) <- {2} (0:3:1) [avatar component clause 322]
324. 0 | 2 [avatar split clause 312,322,316]
326. pred_attacker(name_r1_from_1st) (1:2:1) [resolution 281,307]
328. pred_attacker(name_objective) <- {2} (1:2) [resolution 290,323]
330. $false <- {2} (1:0) [subsumption resolution 328,313]
331. ~2 [avatar contradiction clause 330]
334. pred_attacker(name_r1) (1:2:1) [resolution 294,310]
337. constr_xor(constr_ZERO,X1) = X1 (1:5:1) [superposition 271,270, 270 into 271, unify on (0).2 in 270 and (0).1 in 271]
357. pred_attacker(constr_f(constr_xor(name_r1_from_1st,name_r2_from_1st),name_t)) (1:6:1) [resolution 314,279]
358. pred_attacker(constr_xor(name_r2_from_1st,name_t)) (1:4:1) [resolution 314,278]
359. ~pred_attacker(constr_f(constr_xor(name_r1,constr_xor(X0,name_t)),name_t)) | ~pred_attacker(X0) <- {0} (1:10:1) [resolution 317,295]
365. constr_xor(constr_ZERO,X1) = constr_xor(X0,constr_xor(X0,X1)) (1:9) [superposition 272,269, 269 into 272, unify on (0).2 in 269 and (0).2.1 in 272]
373. constr_xor(X7,constr_xor(X8,X9)) = constr_xor(X9,constr_xor(X7,X8)) (1:11:1) [superposition 272,271, 271 into 272, unify on (0).2 in 271 and (0).2 in 272]
376. pred_attacker(constr_xor(X2,constr_xor(X3,X4))) | ~pred_attacker(X4) | ~pred_attacker(constr_xor(X2,X3)) (1:12:1) [superposition 273,272, 272 into 273, unify on (0).2 in 272 and (0).1 in 273]
381. constr_xor(X0,constr_xor(X0,X1)) = X1 (1:7:1) [forward demodulation 365,337]
406. constr_xor(X1,constr_xor(X2,X1)) = X2 (2:7:1) [superposition 381,271, 271 into 381, unify on (0).2 in 271 and (0).1.2 in 381]
502. constr_xor(constr_xor(X6,X7),X7) = X6 (3:7:1) [superposition 406,381, 381 into 406, unify on (0).2 in 381 and (0).1.2 in 406]
591. ~pred_attacker(constr_f(constr_xor(X31,constr_xor(name_t,name_r1)),name_t)) | ~pred_attacker(X31) <- {0} (2:10) [superposition 359,373, 373 into 359, unify on (0).2 in 373 and (0).1.1 in 359]
629. ~pred_attacker(constr_f(constr_xor(X31,constr_xor(name_r1,name_t)),name_t)) | ~pred_attacker(X31) <- {0} (2:10:1) [forward demodulation 591,271]
677. pred_attacker(constr_xor(X4,constr_xor(X3,X2))) | ~pred_attacker(X3) | ~pred_attacker(constr_xor(X4,X2)) (2:12:1) [superposition 376,271, 271 into 376, unify on (0).2 in 271 and (0).1.2 in 376]
1054. ~pred_attacker(constr_xor(X8,constr_xor(name_r1,name_t))) | ~pred_attacker(constr_f(X8,name_t)) <- {0} (4:10:1) [superposition 629,502, 502 into 629, unify on (0).2 in 502 and (0).1.1 in 629]
28520. ~pred_attacker(constr_f(X0,name_t)) | ~pred_attacker(name_r1) | ~pred_attacker(constr_xor(X0,name_t)) <- {0} (5:10) [resolution 1054,677]
28559. ~pred_attacker(constr_f(X0,name_t)) | ~pred_attacker(constr_xor(X0,name_t)) <- {0} (5:8:1) [subsumption resolution 28520,334]
31318. ~pred_attacker(constr_xor(constr_xor(name_r1_from_1st,name_r2_from_1st),name_t)) <- {0} (6:6) [resolution 28559,357]
31319. ~pred_attacker(constr_xor(name_t,constr_xor(name_r1_from_1st,name_r2_from_1st))) <- {0} (6:6) [forward demodulation 31318,271]
31320. ~pred_attacker(constr_xor(name_r2_from_1st,constr_xor(name_t,name_r1_from_1st))) <- {0} (6:6) [forward demodulation 31319,373]
31321. ~pred_attacker(constr_xor(name_r1_from_1st,constr_xor(name_r2_from_1st,name_t))) <- {0} (6:6:1) [forward demodulation 31320,373]
32559. ~pred_attacker(constr_xor(name_r2_from_1st,name_t)) | ~pred_attacker(name_r1_from_1st) <- {0} (7:6) [resolution 31321,273]
32562. ~pred_attacker(name_r1_from_1st) <- {0} (7:2) [subsumption resolution 32559,358]
32563. $false <- {0} (7:0) [subsumption resolution 32562,326]
32564. ~0 [avatar contradiction clause 32563]
32565. $false (0:0) [avatar sat refutation 324,331,32564]
% SZS output end Proof for SM08-tag-auth
