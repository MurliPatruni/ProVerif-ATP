% Refutation found. Thanks to Tanya!
% SZS status Theorem for LAK06-tag-auth
% SZS output start Proof for LAK06-tag-auth
67. ! [X0] : constr_ZERO = constr_xor(X0,X0) [input]
68. ! [X1] : constr_xor(X1,constr_ZERO) = X1 [input]
69. ! [X2,X3] : constr_xor(X2,X3) = constr_xor(X3,X2) [input]
70. ! [X4,X5,X6] : constr_xor(X4,constr_xor(X5,X6)) = constr_xor(constr_xor(X4,X5),X6) [input]
71. ! [X7,X8] : ((pred_attacker(X8) & pred_attacker(X7)) => pred_attacker(constr_xor(X7,X8))) [input]
76. ! [X13,X14] : (pred_attacker(tuple_knowledge_from_1st_round_out_2(X13,X14)) => pred_attacker(X13)) [input]
77. ! [X15,X16] : (pred_attacker(tuple_knowledge_from_1st_round_out_2(X15,X16)) => pred_attacker(X16)) [input]
79. ! [X18] : (pred_attacker(tuple_knowledge_from_1st_round_out_1(X18)) => pred_attacker(X18)) [input]
84. ! [X21] : (pred_attacker(tuple_R_out_4(X21)) => pred_attacker(X21)) [input]
88. ! [X25] : (pred_attacker(tuple_R_out_1(X25)) => pred_attacker(X25)) [input]
89. ! [X26,X27] : ((pred_attacker(X27) & pred_attacker(X26)) => pred_attacker(tuple_R_in_2(X26,X27))) [input]
102. pred_attacker(tuple_knowledge_from_1st_round_out_1(name_r0x30_from_1st)) [input]
103. pred_attacker(tuple_knowledge_from_1st_round_out_2(name_r1_from_1st,constr_h(constr_xor(constr_xor(name_r0x30_from_1st,name_r1_from_1st),name_k)))) [input]
105. pred_attacker(tuple_R_out_1(name_r0x30)) [input]
107. ! [X39] : (pred_attacker(tuple_R_in_2(X39,constr_h(constr_xor(constr_xor(name_r0x30,X39),name_k)))) => pred_attacker(tuple_R_out_4(name_objective_R))) [input]
108. pred_attacker(name_objective_R) [input]
109. ~pred_attacker(name_objective_R) [negated conjecture 108]
110. ! [X0] : constr_xor(X0,constr_ZERO) = X0 [rectify 68]
111. ! [X0,X1] : constr_xor(X0,X1) = constr_xor(X1,X0) [rectify 69]
112. ! [X0,X1,X2] : constr_xor(X0,constr_xor(X1,X2)) = constr_xor(constr_xor(X0,X1),X2) [rectify 70]
113. ! [X0,X1] : ((pred_attacker(X1) & pred_attacker(X0)) => pred_attacker(constr_xor(X0,X1))) [rectify 71]
117. ! [X0,X1] : (pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1)) => pred_attacker(X0)) [rectify 76]
118. ! [X0,X1] : (pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1)) => pred_attacker(X1)) [rectify 77]
120. ! [X0] : (pred_attacker(tuple_knowledge_from_1st_round_out_1(X0)) => pred_attacker(X0)) [rectify 79]
123. ! [X0] : (pred_attacker(tuple_R_out_4(X0)) => pred_attacker(X0)) [rectify 84]
127. ! [X0] : (pred_attacker(tuple_R_out_1(X0)) => pred_attacker(X0)) [rectify 88]
128. ! [X0,X1] : ((pred_attacker(X1) & pred_attacker(X0)) => pred_attacker(tuple_R_in_2(X0,X1))) [rectify 89]
136. ! [X0] : (pred_attacker(tuple_R_in_2(X0,constr_h(constr_xor(constr_xor(name_r0x30,X0),name_k)))) => pred_attacker(tuple_R_out_4(name_objective_R))) [rectify 107]
137. ~pred_attacker(name_objective_R) [flattening 109]
139. ! [X0,X1] : (pred_attacker(constr_xor(X0,X1)) | (~pred_attacker(X1) | ~pred_attacker(X0))) [ennf transformation 113]
140. ! [X0,X1] : (pred_attacker(constr_xor(X0,X1)) | ~pred_attacker(X1) | ~pred_attacker(X0)) [flattening 139]
145. ! [X0,X1] : (pred_attacker(X0) | ~pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1))) [ennf transformation 117]
146. ! [X0,X1] : (pred_attacker(X1) | ~pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1))) [ennf transformation 118]
148. ! [X0] : (pred_attacker(X0) | ~pred_attacker(tuple_knowledge_from_1st_round_out_1(X0))) [ennf transformation 120]
151. ! [X0] : (pred_attacker(X0) | ~pred_attacker(tuple_R_out_4(X0))) [ennf transformation 123]
155. ! [X0] : (pred_attacker(X0) | ~pred_attacker(tuple_R_out_1(X0))) [ennf transformation 127]
156. ! [X0,X1] : (pred_attacker(tuple_R_in_2(X0,X1)) | (~pred_attacker(X1) | ~pred_attacker(X0))) [ennf transformation 128]
157. ! [X0,X1] : (pred_attacker(tuple_R_in_2(X0,X1)) | ~pred_attacker(X1) | ~pred_attacker(X0)) [flattening 156]
165. ! [X0] : (pred_attacker(tuple_R_out_4(name_objective_R)) | ~pred_attacker(tuple_R_in_2(X0,constr_h(constr_xor(constr_xor(name_r0x30,X0),name_k))))) [ennf transformation 136]
232. constr_ZERO = constr_xor(X0,X0) (0:5:1) [cnf transformation 67]
233. constr_xor(X0,constr_ZERO) = X0 (0:5:1) [cnf transformation 110]
234. constr_xor(X0,X1) = constr_xor(X1,X0) (0:7:1) [cnf transformation 111]
235. constr_xor(X0,constr_xor(X1,X2)) = constr_xor(constr_xor(X0,X1),X2) (0:11:1) [cnf transformation 112]
236. pred_attacker(constr_xor(X0,X1)) | ~pred_attacker(X1) | ~pred_attacker(X0) (0:8:1) [cnf transformation 140]
241. ~pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1)) | pred_attacker(X0) (0:6:1) [cnf transformation 145]
242. ~pred_attacker(tuple_knowledge_from_1st_round_out_2(X0,X1)) | pred_attacker(X1) (0:6:1) [cnf transformation 146]
244. ~pred_attacker(tuple_knowledge_from_1st_round_out_1(X0)) | pred_attacker(X0) (0:5:1) [cnf transformation 148]
249. ~pred_attacker(tuple_R_out_4(X0)) | pred_attacker(X0) (0:5:1) [cnf transformation 151]
253. ~pred_attacker(tuple_R_out_1(X0)) | pred_attacker(X0) (0:5:1) [cnf transformation 155]
254. pred_attacker(tuple_R_in_2(X0,X1)) | ~pred_attacker(X1) | ~pred_attacker(X0) (0:8:1) [cnf transformation 157]
266. pred_attacker(tuple_knowledge_from_1st_round_out_1(name_r0x30_from_1st)) (0:3:1) [cnf transformation 102]
267. pred_attacker(tuple_knowledge_from_1st_round_out_2(name_r1_from_1st,constr_h(constr_xor(constr_xor(name_r0x30_from_1st,name_r1_from_1st),name_k)))) (0:9) [cnf transformation 103]
269. pred_attacker(tuple_R_out_1(name_r0x30)) (0:3:1) [cnf transformation 105]
271. pred_attacker(tuple_R_out_4(name_objective_R)) | ~pred_attacker(tuple_R_in_2(X0,constr_h(constr_xor(constr_xor(name_r0x30,X0),name_k)))) (0:12) [cnf transformation 165]
272. ~pred_attacker(name_objective_R) (0:2:1) [cnf transformation 137]
273. pred_attacker(tuple_knowledge_from_1st_round_out_2(name_r1_from_1st,constr_h(constr_xor(name_k,constr_xor(name_r0x30_from_1st,name_r1_from_1st))))) (0:9:1) [forward demodulation 267,234]
281. ~pred_attacker(tuple_R_in_2(X0,constr_h(constr_xor(name_k,constr_xor(name_r0x30,X0))))) | pred_attacker(tuple_R_out_4(name_objective_R)) (0:12) [forward demodulation 271,234]
286. 0 <=> pred_attacker(tuple_R_out_4(name_objective_R)) [avatar definition]
287. pred_attacker(tuple_R_out_4(name_objective_R)) <- {0} (0:3:1) [avatar component clause 286]
289. 2 <=> ! [X0] : ~pred_attacker(tuple_R_in_2(X0,constr_h(constr_xor(name_k,constr_xor(name_r0x30,X0))))) [avatar definition]
290. ~pred_attacker(tuple_R_in_2(X0,constr_h(constr_xor(name_k,constr_xor(name_r0x30,X0))))) <- {2} (0:9:1) [avatar component clause 289]
291. 0 | 2 [avatar split clause 281,289,286]
293. pred_attacker(name_r0x30_from_1st) (1:2:1) [resolution 244,266]
297. pred_attacker(name_r0x30) (1:2:1) [resolution 253,269]
299. constr_xor(constr_ZERO,X1) = X1 (1:5:1) [superposition 234,233, 233 into 234, unify on (0).2 in 233 and (0).1 in 234]
319. pred_attacker(constr_h(constr_xor(name_k,constr_xor(name_r0x30_from_1st,name_r1_from_1st)))) (1:7:1) [resolution 273,242]
320. pred_attacker(name_r1_from_1st) (1:2:1) [resolution 273,241]
321. ~pred_attacker(constr_h(constr_xor(name_k,constr_xor(name_r0x30,X0)))) | ~pred_attacker(X0) <- {2} (1:9:1) [resolution 290,254]
329. constr_xor(constr_ZERO,X1) = constr_xor(X0,constr_xor(X0,X1)) (1:9) [superposition 235,232, 232 into 235, unify on (0).2 in 232 and (0).2.1 in 235]
341. pred_attacker(constr_xor(X4,constr_xor(X5,X6))) | ~pred_attacker(X6) | ~pred_attacker(constr_xor(X4,X5)) (1:12:1) [superposition 236,235, 235 into 236, unify on (0).2 in 235 and (0).1 in 236]
344. constr_xor(X0,constr_xor(X0,X1)) = X1 (1:7:1) [forward demodulation 329,299]
377. ~pred_attacker(constr_h(constr_xor(name_k,X2))) | ~pred_attacker(constr_xor(name_r0x30,X2)) <- {2} (2:9:1) [superposition 321,344, 344 into 321, unify on (0).2 in 344 and (0).1.1.2 in 321]
791. ~pred_attacker(constr_xor(name_r0x30,constr_xor(name_r0x30_from_1st,name_r1_from_1st))) <- {2} (3:6:1) [resolution 377,319]
805. ~pred_attacker(name_r1_from_1st) | ~pred_attacker(constr_xor(name_r0x30,name_r0x30_from_1st)) <- {2} (4:6) [resolution 791,341]
807. ~pred_attacker(constr_xor(name_r0x30,name_r0x30_from_1st)) <- {2} (4:4:1) [subsumption resolution 805,320]
863. ~pred_attacker(name_r0x30_from_1st) | ~pred_attacker(name_r0x30) <- {2} (5:4) [resolution 807,236]
864. ~pred_attacker(name_r0x30) <- {2} (5:2) [subsumption resolution 863,293]
865. $false <- {2} (5:0) [subsumption resolution 864,297]
866. ~2 [avatar contradiction clause 865]
868. pred_attacker(name_objective_R) <- {0} (1:2) [resolution 287,249]
869. $false <- {0} (1:0) [subsumption resolution 868,272]
870. ~0 [avatar contradiction clause 869]
871. $false (0:0) [avatar sat refutation 291,866,870]
% SZS output end Proof for LAK06-tag-auth
