const CONST_0 : bitstring.
const CONST_1 : bitstring.
const CONST_2 : bitstring.
const CONST_3 : bitstring.
const CONST_4 : bitstring.

pred eq(bitstring, bitstring).

clauses
  forall x : bitstring;
    eq(x, x).

free c : channel.
free objective : bitstring [private].

fun exp(bitstring, bitstring) : bitstring.
fun mod(bitstring, bitstring) : bitstring.

equation
  forall P : bitstring, G : bitstring, x : bitstring, y : bitstring; 
    mod(exp(exp(G, x), y), P) = mod(exp(exp(G, y), x), P).

fun enc(bitstring, bitstring) : bitstring.
fun dec(bitstring, bitstring) : bitstring.

equation
  forall m : bitstring, k : bitstring; 
    dec(enc(m, k), k) = m.

query 
  attacker(objective).

const A_STEP_1 : bitstring.
const A_STEP_2 : bitstring.
const A_STEP_3 : bitstring.

let A =
  new P : bitstring;
  new G : bitstring;
  new Na : bitstring;
  out(c, ((P, G), A_STEP_1));
  out(c, (mod(exp(G, Na), P), A_STEP_2));
  in(c, B : bitstring);
  let s = mod(exp(B, Na), P) in
  out(c, (enc(objective, s), A_STEP_3));
  0.

const B_STEP_1 : bitstring.

let B =
  new Nb : bitstring;
  in(c, (P : bitstring, G : bitstring));
  in(c, A : bitstring);
  out(c, (mod(exp(G, Nb), P), B_STEP_1));
  let s = mod(exp(A, Nb), P) in
  0.

process
  (
    A
  )
  | (
    B
  )